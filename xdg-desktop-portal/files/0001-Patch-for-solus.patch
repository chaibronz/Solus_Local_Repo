From 1edb1cd25a95751fc3c2a2be6e1755dabef42a8b Mon Sep 17 00:00:00 2001
From: Matt Kastelic <edenfall_matt@hotmail.com>
Date: Wed, 10 Nov 2021 21:18:36 -0500
Subject: [PATCH] Patch for solus

---
 configure.ac   |  7 ++--
 src/open-uri.c | 89 ++++++++++++++++++++++++--------------------------
 2 files changed, 44 insertions(+), 52 deletions(-)

diff --git a/configure.ac b/configure.ac
index ff5e263..c680369 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,6 +1,6 @@
 AC_PREREQ([2.63])
 
-AC_INIT([xdg-desktop-portal],[1.10.1])
+AC_INIT([xdg-desktop-portal],[1.10.0])
 
 AC_USE_SYSTEM_EXTENSIONS
 AC_SYS_LARGEFILE
@@ -50,10 +50,7 @@ AC_SUBST(DBUS_SERVICE_DIR)
 AC_ARG_WITH(flatpak_interfaces_dir,
         AS_HELP_STRING([--with-flatpak-interfaces-dir=PATH],[choose directory for Flatpak interface files, [default=PREFIX/share/dbus-1/interfaces]]),
         [[FLATPAK_INTERFACES_DIR="$withval"]],
-	[PKG_CHECK_VAR([FLATPAK_INTERFACES_DIR], [flatpak], [interfaces_dir])])
-if ! pkg-config --atleast-version "1.5.0" flatpak; then
-        FLATPAK_INTERFACES_DIR=""
-fi
+	[PKG_CHECK_VAR([FLATPAK_INTERFACES_DIR], [flatpak >= 1.5.0], [interfaces_dir])])
 AC_SUBST(FLATPAK_INTERFACES_DIR)
 
 AC_ARG_WITH([systemduserunitdir],
diff --git a/src/open-uri.c b/src/open-uri.c
index bc53dbf..10e7e3f 100644
--- a/src/open-uri.c
+++ b/src/open-uri.c
@@ -60,8 +60,6 @@ typedef struct _OpenURIClass OpenURIClass;
 struct _OpenURI
 {
   XdpOpenURISkeleton parent_instance;
-
-  GDBusProxy* file_manager;
 };
 
 struct _OpenURIClass
@@ -688,40 +686,51 @@ handle_open_in_thread_func (GTask *task,
       if (open_dir)
         {
           g_autofree char *real_path = get_real_path_for_doc_path (path, app_id);
+          /* Try opening the directory via the file manager interface, then
+             fall back to a plain URI open */
+          g_autoptr(GError) local_error = NULL;
+          g_autoptr(GVariant) result = NULL;
+          g_autoptr(GVariantBuilder) uris_builder = NULL;
+          g_autofree char* item_uri = g_filename_to_uri (real_path, NULL, NULL);
+          g_autoptr(GDBusConnection) bus = NULL;
+
+          bus = g_bus_get_sync (G_BUS_TYPE_SESSION, NULL, &local_error);
+
+          uris_builder = g_variant_builder_new (G_VARIANT_TYPE ("as"));
+          g_variant_builder_add (uris_builder, "s", item_uri);
+
+          if (bus)
+            result = g_dbus_connection_call_sync (bus,
+                                                  FILE_MANAGER_DBUS_NAME,
+                                                  FILE_MANAGER_DBUS_PATH,
+                                                  FILE_MANAGER_DBUS_IFACE,
+                                                  FILE_MANAGER_SHOW_ITEMS,
+                                                  g_variant_new ("(ass)", uris_builder, ""),
+                                                  NULL,   /* ignore returned type */
+                                                  G_DBUS_CALL_FLAGS_NONE,
+                                                  -1,
+                                                  NULL,
+                                                  &local_error);
 
-          if (open_uri->file_manager != NULL)
+          if (result == NULL)
             {
-              /* Try opening the directory via the file manager interface, then
-                 fall back to a plain URI open */
-              g_autoptr(GError) local_error = NULL;
-              g_autoptr(GVariant) result = NULL;
-              g_autoptr(GVariantBuilder) uris_builder = NULL;
-              g_autofree char* item_uri = g_filename_to_uri (real_path, NULL, NULL);
-
-              uris_builder = g_variant_builder_new (G_VARIANT_TYPE ("as"));
-              g_variant_builder_add (uris_builder, "s", item_uri);
-
-              result = g_dbus_proxy_call_sync (open_uri->file_manager,
-                                               FILE_MANAGER_SHOW_ITEMS,
-                                               g_variant_new ("(ass)", uris_builder, ""),
-                                               G_DBUS_CALL_FLAGS_NONE,
-                                               -1,
-                                               NULL,
-                                               &local_error);
-              if (result == NULL)
-                {
-                  g_warning ("Failed to call " FILE_MANAGER_SHOW_ITEMS ": %s",
-                             local_error->message);
-                }
+              if (g_error_matches (local_error, G_DBUS_ERROR,
+                                   G_DBUS_ERROR_NAME_HAS_NO_OWNER) ||
+                  g_error_matches (local_error, G_DBUS_ERROR,
+                                   G_DBUS_ERROR_SERVICE_UNKNOWN))
+                g_debug ("No " FILE_MANAGER_DBUS_NAME " available");
               else
-                {
-                  g_variant_builder_init (&opts_builder, G_VARIANT_TYPE_VARDICT);
-                  xdp_request_emit_response (XDP_REQUEST (request),
-                                             XDG_DESKTOP_PORTAL_RESPONSE_SUCCESS,
-                                             g_variant_builder_end (&opts_builder));
-                  request_unexport (request);
-                  return;
-                }
+                g_warning ("Failed to call " FILE_MANAGER_SHOW_ITEMS ": %s",
+                           local_error->message);
+            }
+          else
+            {
+              g_variant_builder_init (&opts_builder, G_VARIANT_TYPE_VARDICT);
+              xdp_request_emit_response (XDP_REQUEST (request),
+                                         XDG_DESKTOP_PORTAL_RESPONSE_SUCCESS,
+                                         g_variant_builder_end (&opts_builder));
+              request_unexport (request);
+              return;
             }
 
           g_free (path);
@@ -1079,20 +1088,6 @@ open_uri_create (GDBusConnection *connection,
   g_dbus_proxy_set_default_timeout (G_DBUS_PROXY (impl), G_MAXINT);
 
   open_uri = g_object_new (open_uri_get_type (), NULL);
-  open_uri->file_manager = g_dbus_proxy_new_sync (connection,
-                                                  G_DBUS_PROXY_FLAGS_NONE,
-                                                  NULL,
-                                                  FILE_MANAGER_DBUS_NAME,
-                                                  FILE_MANAGER_DBUS_PATH,
-                                                  FILE_MANAGER_DBUS_IFACE,
-                                                  NULL,
-                                                  &error);
-  if (!open_uri->file_manager)
-    {
-      g_debug ("Failed to create FileManager proxy: %s", error->message);
-      // Missing FileManager1 errors should be non-fatal.
-      g_clear_error (&error);
-    }
 
   monitor = g_app_info_monitor_get ();
 
-- 
2.33.1

